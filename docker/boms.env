# skywalking-oap镜像的tag标签，通过docker images获得
TAG=8.2.0-20210426
# jvm
JAVA_OPTS="-Xms256M -Xmx512M"

# 是否集群，若是单机填写：standalone，若是集群在nacos和consul中选择
SW_CLUSTER=nacos
#--------如果注册中心是nacos--------
# nacos地址，集群用逗号隔开
SW_CLUSTER_NACOS_HOST_PORT=192.168.91.100:8848
# Nacos Configuration namespace
SW_CLUSTER_NACOS_NAMESPACE=public
# Nacos auth username
SW_CLUSTER_NACOS_USERNAME=nacos
SW_CLUSTER_NACOS_PASSWORD=nacos
#--------如果注册中心是 consul--------
# Consul cluster nodes, example: 10.0.0.1:8500,10.0.0.2:8500,10.0.0.3:8500
SW_CLUSTER_CONSUL_HOST_PORT=127.0.0.1:8500
# token
SW_CLUSTER_CONSUL_ACLTOKEN=

# 核心配置
# restHost,保持默认即可
SW_CORE_REST_HOST=0.0.0.0
# gRPCHost,替换为本机地址
SW_CORE_GRPC_HOST=127.0.0.1
#链路数据保存的期限，包括链路追踪和告警。单位：天
SW_CORE_RECORD_DATA_TTL=3
#指标数据保存的期限，包括包括百分比，热图，成功率，cpm（rpm）等。单位：天
SW_CORE_METRICS_DATA_TTL=7

# ----elasticsearch7配置------
SW_STORAGE=elasticsearch7
# 索引前缀配置，谨慎修改，boms工程中broker会用到
SW_NAMESPACE=boms
# es地址，集群用逗号隔开
SW_STORAGE_ES_CLUSTER_NODES=127.0.0.1:9200
# 若es配置了用户名和密码，填写下面两个配置；若没有配置用户密码，值为空即可
SW_ES_USER=
SW_ES_PASSWORD=

# ----配置中心apollo----
SW_CONFIGURATION=apollo
#apollo meta地址
SW_META_APOLLO=http://127.0.0.1:8080
SW_CONFIG_APOLLO=
#apollo config地址，这个地址和meta地址的值一直，但是作用不同，场景不同。
# 一般情况下都建议使用Apollo的Meta Server机制来实现Config Service的服务发现，从而可以实现Config Service的高可用。不过apollo-client也支持跳过Meta Server服务发现，主要用于以下场景：
# #
# #1. Config Service部署在公有云上，注册到Meta Server的是内网地址，本地开发环境无法直接连接，如果通过公网 SLB 对外暴露 Config Service的话，记得要设置 IP 白名单，避免数据泄露
# #
# #2. Config Service部署在docker环境中，注册到Meta Server的是docker内网地址，本地开发环境无法直接连接
# #
# #3. Config Service部署在kubernetes中，希望使用kubernetes自带的服务发现能力（Service）
# #
# #针对以上场景，可以通过直接指定Config Service地址的方式来跳过Meta Server服务发现
# #
# #要想让skywalking跳过Meta Server，只需要让参数apolloMeta为空，apolloConfig为Apollo的Config Service地址即可。

# apollo 集群名称，默认即可
SW_CONFIG_APOLLO_CLUSTER=default
# apollo 环境名称，默认DEV
SW_CONFIG_APOLLO_ENV=DEV
# skywalking在Apollo中的项目名称，默认skywalking即可
SW_CONFIG_APOLLO_APP_ID=skywalking

# 配置skywalking-ui
# skywalking OAP服务的gRPCHost地址和端口(默认12800即可)，若是集群，地址用逗号隔开
SW_OAP_ADDRESS=192.168.91.100:12800
